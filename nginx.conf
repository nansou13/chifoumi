# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    keepalive_timeout  15;
    autoindex          off;
    server_tokens      off;
    port_in_redirect   off;
    sendfile           off;
    tcp_nopush         on;
    tcp_nodelay        on;
    client_max_body_size 64k;
    client_header_buffer_size 16k;
    large_client_header_buffers 4 16k;
    ## Cache open FD
    open_file_cache max=10000 inactive=3600s;
    open_file_cache_valid 7200s;
    open_file_cache_min_uses 2;
    ## Gzipping is an easy way to reduce page weight
    gzip                on;
    gzip_vary           on;
    gzip_proxied        any;
    gzip_types          application/javascript application/x-javascript application/rss+xml text/javascript text/css image/svg+xml;
    gzip_buffers        16 8k;
    gzip_comp_level     6;


    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';

    server {
        # listen on port 80
        listen 80;
        # save logs here
        access_log /var/log/nginx/access.log compression;

        # where the root here
        root /var/www;
        # what file to server as index
        index index.html index.htm;

        location / {
            # proxy_set_header X-Prerender-Token LzndQ5fmVhcNJsYTbjD7;
            # proxy_set_header Host $host;
            # proxy_set_header Accept-Encoding "";
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header X-Forwarded-Proto $scheme;

            # set $prerender 0;
            # if ($http_user_agent ~* "googlebot|bingbot|yandex|baiduspider|twitterbot|facebookexternalhit|rogerbot|linkedinbot|embedly|quora link preview|showyoubot|outbrain|pinterest|slackbot|vkShare|W3C_Validator") {
            #     set $prerender 1;
            # }
            # if ($args ~ "_escaped_fragment_") {
            #     set $prerender 1;
            # }
            # if ($http_user_agent ~ "Prerender") {
            #     set $prerender 0;
            # }
            # if ($uri ~* "\.(js|css|xml|less|png|jpg|jpeg|gif|pdf|doc|txt|ico|rss|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff|svg|eot)") {
            #     set $prerender 0;
            # }

            # #resolve using Google's DNS server to force DNS resolution and prevent caching of IPs
            # resolver 8.8.8.8;

            # if ($prerender = 1) {

            #     #setting prerender as a variable forces DNS resolution since nginx caches IPs and doesnt play well with load balancing
            #     set $prerender "service.prerender.io";
            #     set $host2 "51.77.151.102";
            #     rewrite .* /http://$host2$request_uri? break;
            #     proxy_pass http://$prerender;
            # }
            # if ($prerender = 0) {
                rewrite .* /index.html break;
            # }

            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc|swf|eot|ttf|otf|woff|woff2)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}
